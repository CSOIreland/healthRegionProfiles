#skip to next controls whether an iteration should be skipped if there is an error(if SkipToNext == TRUE)
SkipToNext <- FALSE
tryCatch({
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$IHA[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$Region[i]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
# Title for the markdown/html
TitleForRMD <- paste0("IHA Health Profile - ", ED)
# link to map for ED
#EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
#Compile the .rnw with Latex
tools::texi2pdf(gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
tools::texi2pdf(gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
#EDProfile pdf Link for RMD
# EDLinkPDF<- paste0("<font size=\"5\"><a href=\"https://cdn.jsdelivr.net/gh/CSOIreland/edprofiles@resources/2022/health/pdf/",i,"-",EDLC,"-ac-",ACLC,".pdf\""," style=\"text-decoration: none\">A more detailed and print friendly pdf profile - with accompanying tables - is available here.</a></font>")
# EDLinkPDF <- gsub("--","-", EDLinkPDF)
# #render R Markdown
# rmarkdown::render("HealthProfileMarkdown.Rmd", output_file =gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".html")))
#
# print progress
print(paste0("Iteration ", i, " of ", nrow(EDWGUIDAC), " complete(",round(i*100/nrow(EDWGUIDAC),1),"%)"))
# log errors
}, error = function(e) {
ErrorMessage <- paste0("Error in Iteration _", i ,"_: for ED -",ED,"- ", conditionMessage(e))
ErrorList <<- c(ErrorList,ErrorMessage)
SkipToNext <<-TRUE
}
)
#if SkipToNext is TRUE, skip to next iteration
if(SkipToNext) { next }
}
warnings()
setwd("Y:/Projects/TK_HealthRegionProfiles/IHAProfiles/EdProfilesCloneFinal/edprofiles/2022/health/rcode")
library(tidyverse)
library(stringr)
library(ggplot2)
library(tidyr)
library(pxR)
library(dplyr)
library(webshot)
library(htmlwidgets)
library(lubridate)
library(stringi)
library(highcharter)
TodaysDate <- format(Sys.Date(), "%d/%m/%Y")
TodayForJSONLD <- format(Sys.Date(), "%Y/%m/%d/")
#set up working directory, input and output folders.
RootWD <- getwd()
setwd(RootWD)
InputFilesLoc <- file.path(RootWD, "inputs")
OutputFilesLoc <- file.path(RootWD, "outputs")
# Set seed so that when running on a sample of files,given samples don't change between runs
set.seed(123456)
#Create Lists of EDs
SAList <- as.data.frame(as.character(unique(as.data.frame(read.px("https://ws.cso.ie/public/api.restful/PxStat.Data.Cube_API.PxAPIv1/en/88/SM2022T1/SAP2022T1T1ASA?query=%7B%22query%22:%5B%5D,%22response%22:%7B%22format%22:%22px%22,%22pivot%22:null,%22codes%22:false%7D%7D"))$CSO.Small.Areas.2022)))
colnames(SAList)[1] <- "SA"
#Lookup table from ED to AC and replacing of special chars
SAPSHRLookup <- read.csv(paste0(InputFilesLoc,"/SA_RHALookup_FromLibby.csv"), header = T)
SAPSHRLookup$Region <- ifelse(SAPSHRLookup$Region == "Area A", "HSE Dublin and North East",
ifelse(SAPSHRLookup$Region == "Area B", "HSE Dublin and Midlands",
ifelse(SAPSHRLookup$Region == "Area C", "HSE Dublin and South East",
ifelse(SAPSHRLookup$Region == "Area D", "HSE South West",
ifelse(SAPSHRLookup$Region == "Area E", "HSE Midwest",
ifelse(SAPSHRLookup$Region == "Area F", "HSE North and North West","Missing"))))))
SAPSHRLookup$SA_PUB2022 <- str_pad(SAPSHRLookup$SA_PUB2022, 9, pad = "0")
#SAList$SA[SAList$SA == "26701100"] <- "026701100"
#SAPSHRLookup$SA_PUB2022[SAPSHRLookup$SA_PUB2022 == "26701100"] <- "026701100"
SAWHR <- merge(SAList,SAPSHRLookup, by.x = "SA",by.y = "SA_PUB2022", all.x = T)
#SAPSHRLookup$SA_PUB2022[SAPSHRLookup$SA_PUB2022 == "026701100"] <- "26701100"
SAWHR$Region[SAWHR$SA == "Ireland"] <- "State"
SAWHRForJoinWithPX <- SAWHR%>%select(SA,Region,IHA)
EDWGUIDAC <- SAWHR
# Create combined dataframe of EDs GUIDs and ACs
# also creates lower case names of EDs and ACs with dashes instead of spaces so they can be used for filenames
EDWGUIDAC$EDLC <- make.names(tolower(EDWGUIDAC$IHA))
EDWGUIDAC$EDLC <- gsub(".","-",EDWGUIDAC$EDLC, fixed = T)
EDWGUIDAC$ACLC <- make.names(tolower(EDWGUIDAC$Region))
EDWGUIDAC$ACLC <- gsub(".","-",EDWGUIDAC$ACLC, fixed = T)
#Create CSV For HTML Table and EDsearch tool with links to each file
# CSVForHTML <- EDWGUIDAC%>%select(Region,IHA,EDLC,ACLC)
# CSVForHTML$ReportNumber <- 1:nrow(CSVForHTML)
#
# #add links for html and pdf reports
# CSVForHTML$Report <- paste0("<a href=\"https://edprofiles.cso.ie/2022/health/html/",CSVForHTML$ReportNumber,"-",CSVForHTML$EDLC,"-ac-",CSVForHTML$ACLC,".html","\"", " target=\"_blank\"", " title=\"",CSVForHTML$ED," summary report\"", ">","HTML","</a>", "  ",
#                             "<a href=\"https://cdn.jsdelivr.net/gh/CSOIreland/edprofiles@resources/2022/health/pdf/",CSVForHTML$ReportNumber,"-",CSVForHTML$EDLC,"-ac-",CSVForHTML$ACLC,".pdf","\"", " target=\"_blank\"", ", title=\"",CSVForHTML$ED," PDF Report\">","PDF","</a>"  )
# CSVForHTML$Report <- gsub("--","-", CSVForHTML$Report)
# CSVForHTMLToExport <- CSVForHTML%>%select(ED,AC,Report, GUID)%>%dplyr::rename("Electoral Division" = "ED", "Administrative County" = "AC")
#
# write.csv(CSVForHTMLToExport, file = paste0(OutputFilesLoc, "/CSVForHTML.csv"), row.names = F)
# #sample dataset if running tests
#Sample <- sample(1:nrow(EDWGUIDAC),1)
#EDWGUIDAC <- EDWGUIDAC[Sample,]
# Read and Format PX Stat Files
source(paste0(getwd(),"/scripts/1_ReadAndFormatPXStat.R"))
# calculate SAPS Percentages
source(paste0(getwd(),"/scripts/2_SAPSPercentages.R"))
# create an empty list for errors, to be filled later
ErrorList <- list()
i<-1
setwd(RootWD)
#skip to next controls whether an iteration should be skipped if there is an error(if SkipToNext == TRUE)
SkipToNext <- FALSE
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$IHA[i])
ED
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$Region[i]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("IHA Health Profile - ", ED)
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
DisWider <- as.data.frame(DisWider)
# ED subtables
EDDisWiderAllSexes <- DisWider%>%filter(Region == ED & Sex == "Both Sexes")
EDDisWiderAllSexes$PercentageWithADisability <- EDDisWiderAllSexes$value*100/TotalPopEDBothSexes
EDDisWiderMale <- DisWider%>%filter(Region == ED & Sex == "Males")
EDDisWiderMale$PercentageWithADisability <- EDDisWiderMale$value*100/TotalPopEDMales
EDDisWiderFemale <- DisWider%>%filter(Region == ED & Sex == "Females")
EDDisWiderFemale$PercentageWithADisability <- EDDisWiderFemale$value*100/TotalPopEDFemales
# AC subtabels
ACDisWiderAllSexes <- DisWider%>%filter(Region == AC & Sex == "Both Sexes")
ACDisWiderAllSexes$PercentageWithADisability <- ACDisWiderAllSexes$value*100/TotalPopACBothSexes
ACDisWiderMale <- DisWider%>%filter(Region == AC & Sex == "Males")
ACDisWiderMale$PercentageWithADisability <- ACDisWiderMale$value*100/TotalPopACMales
ACDisWiderFemale <- DisWider%>%filter(Region == AC & Sex == "Females")
ACDisWiderFemale$PercentageWithADisability <- ACDisWiderFemale$value*100/TotalPopACFemales
StateDisWiderAllSexes <- DisWider%>%filter(Region == "State" & Sex == "Both Sexes")
StateDisWiderAllSexes$PercentageWithADisability <- StateDisWiderAllSexes$value*100/TotalPopStateBothSexes
StateDisWiderMale <- DisWider%>%filter(Region == "State" & Sex == "Males")
StateDisWiderMale$PercentageWithADisability <- StateDisWiderMale$value*100/TotalPopStateMales
StateDisWiderFemale <- DisWider%>%filter(Region == "State" & Sex == "Females")
StateDisWiderFemale$PercentageWithADisability <- StateDisWiderFemale$value*100/TotalPopStateFemales
# bind ED,  AC and State for plot
DisBinded <- bind_rows(EDDisWiderAllSexes,StateDisWiderAllSexes,ACDisWiderAllSexes)
DisBinded$Region <- factor(DisBinded$Region, levels = c(ED,AC,"State"))
#plot disability
DisPlot<- ggplot(DisBinded , aes(fill=Region, y=PercentageWithADisability , x=Region)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, margin = margin(t = 0.5, unit = "in")),
axis.title.x = element_text(margin = margin(0.1, 0, 0.1, 0)),
legend.position = c(0.15, 0.9))  +
scale_fill_manual(values=c('#405381', '#13C1A5', '#FCBE72'))+
scale_x_discrete(name = "Age Group")+
labs(fill = "Legend") +
scale_y_continuous(name = "% of Population")
# Highcharts plot for RMD
DisBinded$PercentageWithADisability <- round(DisBinded$PercentageWithADisability,1)
DisBinded$colouract <- 1
DisBinded$colouract[DisBinded$Region == ED] <- '#405381'
DisBinded$colouract[DisBinded$Region == AC] <- '#FCBE72'
DisBinded$colouract[DisBinded$Region == "State"] <- '#13C1A5'
DisPlot2 <- highchart()|>
hc_add_series(DisBinded, "column", hcaes(x = Region, y = PercentageWithADisability, color = colouract,  group = Region), color = c('#405381','#FCBE72','#13C1A5'), showInLegend = T)|>
hc_yAxis(
title = list(text = "% of Population"))|>
hc_xAxis(type = "category",
title = list(text = "Age Group"))
#export plot for latex
pdf(paste0(getwd(),"/figures/DisED.pdf"))
print(DisPlot)
dev.off()
ACDisWiderAllSexesNewAges$`Population with a disability as a percentage` <- sprintf("%.1f", round(ACDisWiderAllSexesNewAges$`Population with a disability as a percentage`,1))
EDDisWiderAllSexes$`Population with a disability as a percentage` <- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability as a percentage`,1))
EDDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
EDDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
EDDisWiderMale$`Population with a disability as a percentage` <- sprintf("%.1f", round(EDDisWiderMale$`Population with a disability as a percentage`,1))
EDDisWiderAllSexes$`Population with a disability as a percentage`
# reformat percentages so they are correct for table
#ACDisWiderAllSexesNewAges$`Population with a disability as a percentage` <- sprintf("%.1f", round(ACDisWiderAllSexesNewAges$`Population with a disability as a percentage`,1))
EDDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderAllSexes$PercentageWithADisability,1))
# EDDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
# EDDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
EDDisWiderMale$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderMale$PercentageWithADisability,1))
# EDDisWiderMale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderMale$`Population with a disability to a great extent as a percentage`,1))
# EDDisWiderMale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderMale$`Population with a disability to some extent as a percentage`,1))
EDDisWiderFemale$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderFemale$PercentageWithADisability,1))
# EDDisWiderFemale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderFemale$`Population with a disability to a great extent as a percentage`,1))
# EDDisWiderFemale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderFemale$`Population with a disability to some extent as a percentage`,1))
ACDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(ACDisWiderAllSexes$PercentageWithADisability,1))
# ACDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(ACDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
# ACDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(ACDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
ACDisWiderMale$PercentageWithADisability <- sprintf("%.1f", round(ACDisWiderMale$PercentageWithADisability,1))
# ACDisWiderMale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(ACDisWiderMale$`Population with a disability to a great extent as a percentage`,1))
# ACDisWiderMale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(ACDisWiderMale$`Population with a disability to some extent as a percentage`,1))
ACDisWiderFemale$PercentageWithADisability <- sprintf("%.1f", round(ACDisWiderFemale$PercentageWithADisability,1))
# ACDisWiderFemale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(ACDisWiderFemale$`Population with a disability to a great extent as a percentage`,1))
# ACDisWiderFemale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(ACDisWiderFemale$`Population with a disability to some extent as a percentage`,1))
StateDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(StateDisWiderAllSexes$PercentageWithADisability,1))
# StateDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(StateDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
# StateDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(StateDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
StateDisWiderMale$PercentageWithADisability <- sprintf("%.1f", round(StateDisWiderMale$PercentageWithADisability,1))
# StateDisWiderMale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(StateDisWiderMale$`Population with a disability to a great extent as a percentage`,1))
# StateDisWiderMale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(StateDisWiderMale$`Population with a disability to some extent as a percentage`,1))
StateDisWiderFemale$PercentageWithADisability <- sprintf("%.1f", round(StateDisWiderFemale$`Population with a disability as a percentage`,1))
e
EDDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderAllSexes$PercentageWithADisability,1))
DisWider <- as.data.frame(DisWider)
# ED subtables
EDDisWiderAllSexes <- DisWider%>%filter(Region == ED & Sex == "Both Sexes")
EDDisWiderAllSexes$PercentageWithADisability <- EDDisWiderAllSexes$value*100/TotalPopEDBothSexes
EDDisWiderMale <- DisWider%>%filter(Region == ED & Sex == "Males")
EDDisWiderMale$PercentageWithADisability <- EDDisWiderMale$value*100/TotalPopEDMales
EDDisWiderFemale <- DisWider%>%filter(Region == ED & Sex == "Females")
EDDisWiderFemale$PercentageWithADisability <- EDDisWiderFemale$value*100/TotalPopEDFemales
#State subtables
# StateDisWiderAllSexes <- DisWider%>%filter(Region == "State" & Sex == "Both Sexes")
# StateDisWiderMale <- DisWider%>%filter(Region == "State" & Sex == "Male")
# StateDisWiderFemale <- DisWider%>%filter(Region == "State" & Sex == "Female")
# AC subtabels
ACDisWiderAllSexes <- DisWider%>%filter(Region == AC & Sex == "Both Sexes")
ACDisWiderAllSexes$PercentageWithADisability <- ACDisWiderAllSexes$value*100/TotalPopACBothSexes
ACDisWiderMale <- DisWider%>%filter(Region == AC & Sex == "Males")
ACDisWiderMale$PercentageWithADisability <- ACDisWiderMale$value*100/TotalPopACMales
ACDisWiderFemale <- DisWider%>%filter(Region == AC & Sex == "Females")
ACDisWiderFemale$PercentageWithADisability <- ACDisWiderFemale$value*100/TotalPopACFemales
StateDisWiderAllSexes <- DisWider%>%filter(Region == "State" & Sex == "Both Sexes")
StateDisWiderAllSexes$PercentageWithADisability <- StateDisWiderAllSexes$value*100/TotalPopStateBothSexes
StateDisWiderMale <- DisWider%>%filter(Region == "State" & Sex == "Males")
StateDisWiderMale$PercentageWithADisability <- StateDisWiderMale$value*100/TotalPopStateMales
StateDisWiderFemale <- DisWider%>%filter(Region == "State" & Sex == "Females")
StateDisWiderFemale$PercentageWithADisability <- StateDisWiderFemale$value*100/TotalPopStateFemales
#Recategorise AC age groups because they are different
# ACDisWiderAllSexesNewAges <- ACDisWiderAllSexes
# ACDisWiderAllSexesNewAges$Age.Group <- ifelse(ACDisWiderAllSexesNewAges$Age.Group == "0 - 4 years"|ACDisWiderAllSexesNewAges$Age.Group == "5 - 9 years"|ACDisWiderAllSexesNewAges$Age.Group =="10 - 14 years", "0 - 14 years" ,
#                                               ifelse(ACDisWiderAllSexesNewAges$Age.Group == "15 - 19 years"|ACDisWiderAllSexesNewAges$Age.Group == "20 - 24 years", "15 -24 years" ,
#                                                      ifelse(ACDisWiderAllSexesNewAges$Age.Group == "25 - 29 years"|ACDisWiderAllSexesNewAges$Age.Group == "30 - 34 years"|ACDisWiderAllSexesNewAges$Age.Group == "35 - 39 years"|ACDisWiderAllSexesNewAges$Age.Group == "40 - 44 years", "25 - 44 years" ,
#                                                             ifelse(ACDisWiderAllSexesNewAges$Age.Group == "45 - 49 years"|ACDisWiderAllSexesNewAges$Age.Group == "50 - 54 years"|ACDisWiderAllSexesNewAges$Age.Group == "55 - 59 years"|ACDisWiderAllSexesNewAges$Age.Group == "60 - 64 years", "45 - 64 years" ,
#                                                                    ifelse(ACDisWiderAllSexesNewAges$Age.Group == "65 - 69 years"|ACDisWiderAllSexesNewAges$Age.Group == "70 - 74 years"|ACDisWiderAllSexesNewAges$Age.Group == "75 - 79 years"|ACDisWiderAllSexesNewAges$Age.Group == "80 - 84 years"|ACDisWiderAllSexesNewAges$Age.Group == "85 years and over", "65 years and over" ,
#                                                                           ifelse(ACDisWiderAllSexesNewAges$Age.Group == "All ages", "All ages","Missing"))))))
#
#
# #regroup by new categories and summarise
# ACDisWiderAllSexesNewAges <- ACDisWiderAllSexesNewAges%>%group_by(Region, Age.Group, Sex, CensusYear)%>%dplyr::summarise( `Population with any disability` = sum(`Population with any disability`, na.rm=T),  `Population with a disability to a great extent` = sum(`Population with a disability to a great extent`, na.rm=T), `Population with a disability to some extent` = sum(`Population with a disability to some extent`, na.rm=T), `Population with a disability as a percentage` = sum(`Population with a disability as a percentage`, na.rm=T), `Population with a disability to a great extent as a percentage` = sum(`Population with a disability to a great extent as a percentage`, na.rm=T), `Population with a disability to some extent as a percentage` = sum(`Population with a disability to some extent as a percentage`, na.rm=T))
#
# #add total pop so percentages can ve calculated
# ACDisWiderAllSexesNewAges$TotalPop <- PopACBothSexes$value
#
# #calculate percentage
# ACDisWiderAllSexesNewAges$`Population with a disability as a percentage` <- ACDisWiderAllSexesNewAges$`Population with any disability`*100/ACDisWiderAllSexesNewAges$TotalPop
# bind ED,  AC and State for plot
DisBinded <- bind_rows(EDDisWiderAllSexes,StateDisWiderAllSexes,ACDisWiderAllSexes)
DisBinded$Region <- factor(DisBinded$Region, levels = c(ED,AC,"State"))
#plot disability
DisPlot<- ggplot(DisBinded , aes(fill=Region, y=PercentageWithADisability , x=Region)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, margin = margin(t = 0.5, unit = "in")),
axis.title.x = element_text(margin = margin(0.1, 0, 0.1, 0)),
legend.position = c(0.15, 0.9))  +
scale_fill_manual(values=c('#405381', '#13C1A5', '#FCBE72'))+
scale_x_discrete(name = "Age Group")+
labs(fill = "Legend") +
scale_y_continuous(name = "% of Population")
# Highcharts plot for RMD
DisBinded$PercentageWithADisability <- round(DisBinded$PercentageWithADisability,1)
DisBinded$colouract <- 1
DisBinded$colouract[DisBinded$Region == ED] <- '#405381'
DisBinded$colouract[DisBinded$Region == AC] <- '#FCBE72'
DisBinded$colouract[DisBinded$Region == "State"] <- '#13C1A5'
DisPlot2 <- highchart()|>
hc_add_series(DisBinded, "column", hcaes(x = Region, y = PercentageWithADisability, color = colouract,  group = Region), color = c('#405381','#FCBE72','#13C1A5'), showInLegend = T)|>
hc_yAxis(
title = list(text = "% of Population"))|>
hc_xAxis(type = "category",
title = list(text = "Age Group"))
#export plot for latex
pdf(paste0(getwd(),"/figures/DisED.pdf"))
print(DisPlot)
dev.off()
# Export plot for RMD
# svg(paste0(getwd(),"/figures/DisED.svg"))
# print(DisPlot)
# dev.off()
# reformat percentages so they are correct for table
#ACDisWiderAllSexesNewAges$`Population with a disability as a percentage` <- sprintf("%.1f", round(ACDisWiderAllSexesNewAges$`Population with a disability as a percentage`,1))
EDDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderAllSexes$PercentageWithADisability,1))
# EDDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
# EDDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
EDDisWiderMale$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderMale$PercentageWithADisability,1))
# EDDisWiderMale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderMale$`Population with a disability to a great extent as a percentage`,1))
# EDDisWiderMale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderMale$`Population with a disability to some extent as a percentage`,1))
EDDisWiderFemale$PercentageWithADisability <- sprintf("%.1f", round(EDDisWiderFemale$PercentageWithADisability,1))
# EDDisWiderFemale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(EDDisWiderFemale$`Population with a disability to a great extent as a percentage`,1))
# EDDisWiderFemale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(EDDisWiderFemale$`Population with a disability to some extent as a percentage`,1))
ACDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(ACDisWiderAllSexes$PercentageWithADisability,1))
# ACDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(ACDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
# ACDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(ACDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
ACDisWiderMale$PercentageWithADisability <- sprintf("%.1f", round(ACDisWiderMale$PercentageWithADisability,1))
# ACDisWiderMale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(ACDisWiderMale$`Population with a disability to a great extent as a percentage`,1))
# ACDisWiderMale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(ACDisWiderMale$`Population with a disability to some extent as a percentage`,1))
ACDisWiderFemale$PercentageWithADisability <- sprintf("%.1f", round(ACDisWiderFemale$PercentageWithADisability,1))
# ACDisWiderFemale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(ACDisWiderFemale$`Population with a disability to a great extent as a percentage`,1))
# ACDisWiderFemale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(ACDisWiderFemale$`Population with a disability to some extent as a percentage`,1))
StateDisWiderAllSexes$PercentageWithADisability <- sprintf("%.1f", round(StateDisWiderAllSexes$PercentageWithADisability,1))
# StateDisWiderAllSexes$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(StateDisWiderAllSexes$`Population with a disability to a great extent as a percentage`,1))
# StateDisWiderAllSexes$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(StateDisWiderAllSexes$`Population with a disability to some extent as a percentage`,1))
StateDisWiderMale$PercentageWithADisability <- sprintf("%.1f", round(StateDisWiderMale$PercentageWithADisability,1))
# StateDisWiderMale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(StateDisWiderMale$`Population with a disability to a great extent as a percentage`,1))
# StateDisWiderMale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(StateDisWiderMale$`Population with a disability to some extent as a percentage`,1))
StateDisWiderFemale$PercentageWithADisability <- sprintf("%.1f", round(StateDisWiderFemale$PercentageWithADisability,1))
# StateDisWiderFemale$`Population with a disability to a great extent as a percentage` <- sprintf("%.1f", round(StateDisWiderFemale$`Population with a disability to a great extent as a percentage`,1))
# StateDisWiderFemale$`Population with a disability to some extent as a percentage`<- sprintf("%.1f", round(StateDisWiderFemale$`Population with a disability to some extent as a percentage`,1))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
TotalPopEDMales
EDDisWiderMale$value
EDDisWiderMale$PercentageWithADisability
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
#Compile the .rnw with Latex
tools::texi2pdf(gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
tools::texi2pdf(gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
EDDisWiderAllSexes$value
PopDisabledED
setwd("Y:/Projects/TK_HealthRegionProfiles/IHAProfiles/EdProfilesCloneFinal/edprofiles/2022/health/rcode")
library(tidyverse)
library(stringr)
library(ggplot2)
library(tidyr)
library(pxR)
library(dplyr)
library(webshot)
library(htmlwidgets)
library(lubridate)
library(stringi)
library(highcharter)
TodaysDate <- format(Sys.Date(), "%d/%m/%Y")
TodayForJSONLD <- format(Sys.Date(), "%Y/%m/%d/")
#set up working directory, input and output folders.
RootWD <- getwd()
setwd(RootWD)
InputFilesLoc <- file.path(RootWD, "inputs")
OutputFilesLoc <- file.path(RootWD, "outputs")
# Set seed so that when running on a sample of files,given samples don't change between runs
set.seed(123456)
#Create Lists of EDs
SAList <- as.data.frame(as.character(unique(as.data.frame(read.px("https://ws.cso.ie/public/api.restful/PxStat.Data.Cube_API.PxAPIv1/en/88/SM2022T1/SAP2022T1T1ASA?query=%7B%22query%22:%5B%5D,%22response%22:%7B%22format%22:%22px%22,%22pivot%22:null,%22codes%22:false%7D%7D"))$CSO.Small.Areas.2022)))
colnames(SAList)[1] <- "SA"
#Lookup table from ED to AC and replacing of special chars
SAPSHRLookup <- read.csv(paste0(InputFilesLoc,"/SA_RHALookup_FromLibby.csv"), header = T)
SAPSHRLookup$Region <- ifelse(SAPSHRLookup$Region == "Area A", "HSE Dublin and North East",
ifelse(SAPSHRLookup$Region == "Area B", "HSE Dublin and Midlands",
ifelse(SAPSHRLookup$Region == "Area C", "HSE Dublin and South East",
ifelse(SAPSHRLookup$Region == "Area D", "HSE South West",
ifelse(SAPSHRLookup$Region == "Area E", "HSE Midwest",
ifelse(SAPSHRLookup$Region == "Area F", "HSE North and North West","Missing"))))))
SAPSHRLookup$SA_PUB2022 <- str_pad(SAPSHRLookup$SA_PUB2022, 9, pad = "0")
#SAList$SA[SAList$SA == "26701100"] <- "026701100"
#SAPSHRLookup$SA_PUB2022[SAPSHRLookup$SA_PUB2022 == "26701100"] <- "026701100"
SAWHR <- merge(SAList,SAPSHRLookup, by.x = "SA",by.y = "SA_PUB2022", all.x = T)
#SAPSHRLookup$SA_PUB2022[SAPSHRLookup$SA_PUB2022 == "026701100"] <- "26701100"
SAWHR$Region[SAWHR$SA == "Ireland"] <- "State"
SAWHRForJoinWithPX <- SAWHR%>%select(SA,Region,IHA)
EDWGUIDAC <- SAWHR
# Create combined dataframe of EDs GUIDs and ACs
# also creates lower case names of EDs and ACs with dashes instead of spaces so they can be used for filenames
EDWGUIDAC$EDLC <- make.names(tolower(EDWGUIDAC$IHA))
EDWGUIDAC$EDLC <- gsub(".","-",EDWGUIDAC$EDLC, fixed = T)
EDWGUIDAC$ACLC <- make.names(tolower(EDWGUIDAC$Region))
EDWGUIDAC$ACLC <- gsub(".","-",EDWGUIDAC$ACLC, fixed = T)
#Create CSV For HTML Table and EDsearch tool with links to each file
# CSVForHTML <- EDWGUIDAC%>%select(Region,IHA,EDLC,ACLC)
# CSVForHTML$ReportNumber <- 1:nrow(CSVForHTML)
#
# #add links for html and pdf reports
# CSVForHTML$Report <- paste0("<a href=\"https://edprofiles.cso.ie/2022/health/html/",CSVForHTML$ReportNumber,"-",CSVForHTML$EDLC,"-ac-",CSVForHTML$ACLC,".html","\"", " target=\"_blank\"", " title=\"",CSVForHTML$ED," summary report\"", ">","HTML","</a>", "  ",
#                             "<a href=\"https://cdn.jsdelivr.net/gh/CSOIreland/edprofiles@resources/2022/health/pdf/",CSVForHTML$ReportNumber,"-",CSVForHTML$EDLC,"-ac-",CSVForHTML$ACLC,".pdf","\"", " target=\"_blank\"", ", title=\"",CSVForHTML$ED," PDF Report\">","PDF","</a>"  )
# CSVForHTML$Report <- gsub("--","-", CSVForHTML$Report)
# CSVForHTMLToExport <- CSVForHTML%>%select(ED,AC,Report, GUID)%>%dplyr::rename("Electoral Division" = "ED", "Administrative County" = "AC")
#
# write.csv(CSVForHTMLToExport, file = paste0(OutputFilesLoc, "/CSVForHTML.csv"), row.names = F)
# #sample dataset if running tests
#Sample <- sample(1:nrow(EDWGUIDAC),1)
#EDWGUIDAC <- EDWGUIDAC[Sample,]
# Read and Format PX Stat Files
source(paste0(getwd(),"/scripts/1_ReadAndFormatPXStat.R"))
# calculate SAPS Percentages
source(paste0(getwd(),"/scripts/2_SAPSPercentages.R"))
# create an empty list for errors, to be filled later
ErrorList <- list()
# Loop through every file in the process for every ED
for (i in 1:nrow(EDWGUIDAC)) {
setwd(RootWD)
#skip to next controls whether an iteration should be skipped if there is an error(if SkipToNext == TRUE)
SkipToNext <- FALSE
tryCatch({
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$IHA[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$Region[i]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
# Title for the markdown/html
TitleForRMD <- paste0("IHA Health Profile - ", ED)
# link to map for ED
#EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
#Compile the .rnw with Latex
tools::texi2pdf(gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
tools::texi2pdf(gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".tex")))
#EDProfile pdf Link for RMD
# EDLinkPDF<- paste0("<font size=\"5\"><a href=\"https://cdn.jsdelivr.net/gh/CSOIreland/edprofiles@resources/2022/health/pdf/",i,"-",EDLC,"-ac-",ACLC,".pdf\""," style=\"text-decoration: none\">A more detailed and print friendly pdf profile - with accompanying tables - is available here.</a></font>")
# EDLinkPDF <- gsub("--","-", EDLinkPDF)
# #render R Markdown
# rmarkdown::render("HealthProfileMarkdown.Rmd", output_file =gsub("--","-",paste0(i,"-",EDLC,"-ac-",ACLC,".html")))
#
# print progress
print(paste0("Iteration ", i, " of ", nrow(EDWGUIDAC), " complete(",round(i*100/nrow(EDWGUIDAC),1),"%)"))
# log errors
}, error = function(e) {
ErrorMessage <- paste0("Error in Iteration _", i ,"_: for ED -",ED,"- ", conditionMessage(e))
ErrorList <<- c(ErrorList,ErrorMessage)
SkipToNext <<-TRUE
}
)
#if SkipToNext is TRUE, skip to next iteration
if(SkipToNext) { next }
}
